use crate::definitions::SqlDataType;

#[non_exhaustive]
#[derive(Debug, PartialEq, Eq)]
pub struct SimpleTypeInfo {
    pub type_name: &'static str,
    pub sql_type: SqlDataType,
    pub non_concise_type: SqlDataType,
    pub searchable: i32,
    pub is_case_sensitive: bool,
    pub fixed_prec_scale: bool,
    pub scale: Option<u16>,
    pub precision: Option<u16>,
    pub octet_length: Option<u16>,
    pub fixed_bytes_length: Option<u16>,
    pub literal_prefix: Option<&'static str>,
    pub literal_suffix: Option<&'static str>,
    pub sql_code: Option<i32>,
    pub is_auto_unique_value: Option<bool>,
    pub is_unsigned: Option<bool>,
    pub num_prec_radix: Option<u16>,
}

pub const SQL_SEARCHABLE: i32 = 3;
pub const SQL_PRED_BASIC: i32 = 2;
pub const SQL_PRED_NONE: i32 = 0;

impl SimpleTypeInfo {
    pub const DOUBLE: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "double",
        sql_type: SqlDataType::DOUBLE,
        non_concise_type: SqlDataType::DOUBLE,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: true,
        scale: Some(15),
        precision: Some(15),
        octet_length: Some(8),
        fixed_bytes_length: Some(8),
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: Some(false),
        is_unsigned: Some(false),
        num_prec_radix: Some(10),
    };
    pub const STRING: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "string",
        sql_type: SqlDataType::EXT_W_VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_SEARCHABLE,
        is_case_sensitive: true,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: Some("'"),
        literal_suffix: Some("'"),
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const OBJECT: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "object",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_NONE,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const ARRAY: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "array",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_NONE,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const BINDATA: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "binData",
        sql_type: SqlDataType::EXT_BINARY,
        non_concise_type: SqlDataType::EXT_BINARY,
        searchable: SQL_PRED_NONE,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const UNDEFINED: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "undefined",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_NONE,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const OBJECTID: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "objectId",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: Some(24),
        octet_length: Some(24),
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: Some(true),
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const BOOL: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "bool",
        sql_type: SqlDataType::EXT_BIT,
        non_concise_type: SqlDataType::EXT_BIT,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: Some(1),
        octet_length: Some(1),
        fixed_bytes_length: Some(1),
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const DATE: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "date",
        sql_type: SqlDataType::TIMESTAMP,
        non_concise_type: SqlDataType::DATETIME,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: true,
        scale: Some(3),
        precision: Some(23),
        octet_length: Some(16),
        fixed_bytes_length: Some(16),
        literal_prefix: Some("'"),
        literal_suffix: Some("'"),
        sql_code: Some(3),
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const NULL: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "null",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_NONE,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const REGEX: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "regex",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const DBPOINTER: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "dbPointer",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const JAVASCRIPT: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "javascript",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const SYMBOL: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "symbol",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const JAVASCRIPTWITHSCOPE: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "javascriptWithScope",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const INT: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "int",
        sql_type: SqlDataType::INTEGER,
        non_concise_type: SqlDataType::INTEGER,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: true,
        scale: Some(0),
        precision: Some(10),
        octet_length: Some(4),
        fixed_bytes_length: Some(4),
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: Some(false),
        is_unsigned: Some(false),
        num_prec_radix: Some(10),
    };
    pub const TIMESTAMP: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "timestamp",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const LONG: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "long",
        sql_type: SqlDataType::EXT_BIG_INT,
        non_concise_type: SqlDataType::EXT_BIG_INT,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: true,
        scale: Some(0),
        precision: Some(19),
        octet_length: Some(8),
        fixed_bytes_length: Some(8),
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: Some(false),
        is_unsigned: Some(false),
        num_prec_radix: Some(10),
    };
    pub const DECIMAL: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "decimal",
        // TODO SQL-1068: Change to SqlDataType::DECIMAL
        sql_type: SqlDataType::FLOAT,
        non_concise_type: SqlDataType::FLOAT,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,          // TODO SQL-1068: Some(34),
        octet_length: None,       // TODO SQL-1068: Some(16),
        fixed_bytes_length: None, // TODO SQL-1068: Some(16),
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: Some(false),
        is_unsigned: Some(false),
        num_prec_radix: None,
    };
    pub const MINKEY: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "minKey",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const MAXKEY: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "maxKey",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_BASIC,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
    pub const BSON: SimpleTypeInfo = SimpleTypeInfo {
        type_name: "bson",
        sql_type: SqlDataType::VARCHAR,
        non_concise_type: SqlDataType::VARCHAR,
        searchable: SQL_PRED_NONE,
        is_case_sensitive: false,
        fixed_prec_scale: false,
        scale: None,
        precision: None,
        octet_length: None,
        fixed_bytes_length: None,
        literal_prefix: None,
        literal_suffix: None,
        sql_code: None,
        is_auto_unique_value: None,
        is_unsigned: None,
        num_prec_radix: None,
    };
}
